/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pcdpractica4;

import java.awt.Color;
import static java.lang.Thread.sleep;

/**
 *
 * @author jarro
 */
public class PilaFrame extends javax.swing.JFrame {

    /**
     * Creates new form PilaFrame
     */
    public PilaFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        int capacidad = 5;
        PilaFrame pila_frame = new PilaFrame();
        CanvasPila canvas_pila = new CanvasPila(capacidad);
        canvas_pila.setSize(550, 720);
        canvas_pila.setBackground(Color.DARK_GRAY);
        pila_frame.setSize(550, 720);
        pila_frame.add(canvas_pila);
        pila_frame.setLocationRelativeTo(null);
        pila_frame.setVisible(true);
        PilaLenta pila = new PilaLenta(capacidad, canvas_pila);

        Productor productor = new Productor(pila);
        Consumidor consumidor = new Consumidor(pila);
        Thread h1 = new Thread(productor);
        Thread h2 = new Thread(productor);
        Thread h5 = new Thread(productor);
        Thread h6 = new Thread(productor);
        // Thread h3 =new Thread(consumidor);
        Thread h4 = new Thread(consumidor);

        try {

            h1.start();
            h2.start();
            h5.start();
            h6.start();
            h4.start();

            h4.join();             //FIN CONSUMIDOR
            sleep(3500);
            for (int i = 0; i < 3; i++) {
                synchronized (pila) {
                    pila.notifyAll();
                }
                sleep(100);
            }

            h1.join();
            h2.join();
            h5.join();
            h6.join();
            //h3.start();

            //h3.join();
        } catch (InterruptedException ex) {
            System.out.println("Error: " + ex.getMessage());

        }
    System.exit(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
